package navigation

import (
	"rollbringer/pkg/domain"
	. "rollbringer/pkg/views"
	. "rollbringer/pkg/views/components"
)

templ NavBar(class string) {
	<div
		class={ "nav-bar", class }
		x-data
		if GetPlayPage(ctx).LoggedIn {
			hx-get="/games"
			hx-trigger="load"
			hx-target="find tbody"
		}
	>
		@IconButton("games-btn", "ic:baseline-meeting-room", templ.Attributes{
             "x-on:click": "$root.querySelector('.games-modal').showModal()",
        })
		@Modal("games-modal", "Games") {
			@Table("Your Games", IconButton("", "material-symbols:add", templ.Attributes{
                "hx-post": "/games",
                "hx-target": "next table",
                "hx-swap": "beforeend",
            }))
			@Table("Other Games", nil)
		}
	</div>
}

templ GameRows(games []*domain.Game) {
	for _, game := range games {
		@GameRow(game)
	}
}

templ GameRow(game *domain.Game) {
	@TableRow(
        templ.Attributes{
    	    "x-on:click": F("window.location.href = '/play?g=%s'", game.ID),
        },
        game.Title,
        "foobarbazz",
        IconButton("", "material-symbols:delete", templ.Attributes{
            "x-on:click.stop": true,
            "hx-delete": F("/games/%s", game.ID),
            "hx-target": "closest tr",
            "hx-swap": "outerHTML",
        }),
        IconButton("", "material-symbols:edit", templ.Attributes{
            "x-on:click.stop": true,
        }),
	)
}

templ Rolls(rolls []*domain.Roll) {
	for _, roll := range rolls {
		@Roll(roll)
	}
}

templ Roll(roll *domain.Roll) {
	<li>
		{ roll.ID }
	</li>
}
