package play_materials

import (
	"slices"

	"rollbringer/pkg/domain"
	. "rollbringer/pkg/views"
	. "rollbringer/pkg/views/components"
)

templ UserPDFs() {
	<div class="user-pdfs">
		//
		// A modal with a form to create a PDF.
		@Modal("create-pdf-modal", "Create PDF") {
			<form
				x-data="{ view: 'All_GameInfo' }"
				x-init="$watch('view', () => htmx.process($el))"
				x-bind:hx-post="`/play-materials/pdfs?view=${view}`"
			>
				<input type="hidden" name="schema" value="DND_CHARACTER_SHEET"/>
				//
				<label for="game_id">
					Game:
					<select
						name="game_id"
						if game :=GetPlayPage(ctx).Game; game !=nil {
							x-on:change={ F("$event.target.value==='%s' ? view='All_OwnerInfo_GameInfo' : view='All_GameInfo'", game.ID) }
						}
					>
						<option value="">None</option>
						for _, game := range slices.Concat(GetPlayPage(ctx).User.HostedGames, GetPlayPage(ctx).User.JoinedGames) {
							<option value={ game.ID.String() }>{ game.Name }</option>
						}
					</select>
				</label>
				//
				<label for="name">
					Name:
					<input type="text" name="name"/>
				</label>
				//
				<input type="submit" value="Create"/>
			</form>
		}
		//
		// A table for the user's D&D character sheets.
		@Table("Character Sheets", IconButton("", "material-symbols:add", templ.Attributes{
			"x-on:click": "$root.querySelector('.create-pdf-modal').showModal()",
		})) {
			for _, pdf := range GetPlayPage(ctx).User.PDFs {
				@UserPDFTableRow(pdf)
			}
		}
	</div>
}

templ UserPDFTableRow(pdf *domain.PDF) {
	@TableRow(
		templ.Attributes{
			"hx-get":    F("/play-materials/pdfs/%s", pdf.ID),
			"hx-target": "this",
			"hx-swap":   "none",
		},
		pdf.Name,
		pdf.Game.Name,
		IconButton("", "material-symbols:delete", templ.Attributes{
			"x-on:click.stop": true,
			"hx-delete":       F("/play-materials/pdfs/%s", pdf.ID),
			"hx-target":       "closest tr",
			"hx-swap":         "outerHTML",
		}),
		IconButton("", "material-symbols:edit", templ.Attributes{
			"x-on:click.stop": true,
		}),
	)
}

templ GamePDFs() {
	<div class="game-pdfs">
		//
		// A table for the current game's D&D character sheets.
		@Table("Character Sheets", templ.NopComponent) {
			for _, pdf := range GetPlayPage(ctx).Game.PDFs {
				@GamePDFTableRow(pdf)
			}
		}
	</div>
}

templ GamePDFTableRow(pdf *domain.PDF) {
	@TableRow(
		templ.Attributes{
			"hx-get":    F("/play-materials/pdfs/%s", pdf.ID),
			"hx-target": "this",
			"hx-swap":   "none",
		},
		pdf.Name,
		pdf.Owner.Username,
	)
}

templ NewPDFTableRow(pdf *domain.PDF) {
	<tbody hx-swap-oob="beforeend:.user-pdfs .table tbody">
		@UserPDFTableRow(pdf)
	</tbody>
	if pdf.Owner != nil {
		<tbody hx-swap-oob="beforeend:.game-pdfs .table tbody">
			@GamePDFTableRow(pdf)
		</tbody>
	}
}
