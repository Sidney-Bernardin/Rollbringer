package components

import . "rollbringer/pkg/views"

templ TabPanel(class string, initialTabs map[string]templ.Component) {
	<div
		class={ "tab-panel", class }
		x-data="{ currentTab: '' }"
	>
		<ul class="tab-panel__list">
			if initialTabs != nil {
				for name := range initialTabs {
					@tabButton(name)
				}
			}
		</ul>
		<div class="tab-panel__wrapper">
			if initialTabs != nil {
				for name, content := range initialTabs {
					@tabItem(name, content)
				}
			}
		</div>
	</div>
}

templ tabButton(name string) {
	<li
		class="tab-button"
		x-data={ F(`{ tabName: '%s' }`, name) }
		x-bind:class="currentTab == tabName && 'active'"
		x-on:click="currentTab = tabName"
		x-on:close-tab="$el.remove()"
	>
		{ name }
		<button x-on:click="$dispatch('close-tab', { tabName })">
			<iconify-icon icon="material-symbols:close"></iconify-icon>
		</button>
	</li>
}

templ tabItem(name string, content templ.Component) {
	<div
		class="tab-item"
		x-data={ F(`{ tabName: '%s' }`, name) }
		x-show="currentTab == tabName"
		x-on:close-tab.window="($event.detail.tabName == tabName) && $el.remove()"
	>
		@content
	</div>
}

const (
	TabPanelSelectorPlayMaterial = ".tab-panel.layout__left"
	TabPanelSelectorScene        = ".tab-panel.layout__top"
)

templ HTMXAddTabs(selector string, newTabs map[string]templ.Component) {
	for name, content := range newTabs {
		<div hx-swap-oob={ "beforeend:" + selector + " .tab-panel__list" }>
			@tabButton(name)
		</div>
		<div hx-swap-oob={ "beforeend:" + selector + " .tab-panel__wrapper" }>
			@tabItem(name, content)
		</div>
	}
}
